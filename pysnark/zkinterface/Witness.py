# automatically generated by the FlatBuffers compiler, do not modify

# namespace: zkinterface

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# Witness represents an assignment of values to variables.
#
# - Does not include variables already given in `CircuitHeader.instance_variables`.
# - Does not include the constant one variable.
# - Multiple such messages are equivalent to the concatenation of `Variables` arrays.
class Witness(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Witness()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsWitness(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def WitnessBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x7A\x6B\x69\x66", size_prefixed=size_prefixed)

    # Witness
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Witness
    def AssignedVariables(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from zkinterface.Variables import Variables
            obj = Variables()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def WitnessStart(builder):
    builder.StartObject(1)

def Start(builder):
    WitnessStart(builder)

def WitnessAddAssignedVariables(builder, assignedVariables):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(assignedVariables), 0)

def AddAssignedVariables(builder, assignedVariables):
    WitnessAddAssignedVariables(builder, assignedVariables)

def WitnessEnd(builder):
    return builder.EndObject()

def End(builder):
    return WitnessEnd(builder)
